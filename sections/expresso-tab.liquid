{% schema %}
  {
    "name": "Expresso Tab",
    "settings": [],
    "blocks": [
      {
        "type": "test",
        "name": "Test Multiple Blocks",
        "settings": [
          {
            "type": "text",
            "id": "tab_title_dr",
            "label": "Tab Title",
            "default": "Tab"
          }
        ]
      },
      {
        "type": "tab",
        "name": "Tab",
        "settings": [
          {
            "type": "text",
            "id": "tab_title",
            "label": "Tab Title",
            "default": "Tab"
          },
          {
            "type": "range",
            "id": "number_of_products",
            "min": 3,
            "max": 6,
            "step": 1,
            "label": "Number Of Product",
            "default": 3
          },
          {
            "type": "product_list",
            "id": "product_list",
            "label": "Products",
            "limit": 4
          },
          {
            "type": "collection",
            "id": "collection",
            "label": "Collection"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Expresso Tab",
        "blocks": [
          {
            "type": "tab"
          }
        ]
      }
    ]
  }
{% endschema %}


{%- style -%}
  /* Style the tab */
  .tab {
    overflow: hidden;
    border: 1px solid #ccc;
    background-color: #f1f1f1;
    display: flex;
    justify-content: center;
  }

  /* Style the buttons that are used to open the tab content */
  .tab button {
    background-color: inherit;
    float: left;
    border: none;
    outline: none;
    cursor: pointer;
    padding: 14px 16px;
    transition: 0.3s;
  }

  /* Change background color of buttons on hover */
  .tab button:hover {
    /* background-color: #ddd; */
  }

  /* Create an active/current tablink class */
  .tab button.active {
    background-color: #ccc;
  }

  /* Style the tab content */
  .tabcontent {
    display: none;
    padding: 6px 12px;
    border: 1px solid #ccc;
    border-top: none;
  }

  .tabcontent.active {
    display: block;
  }

  .ex-featured-products {
    display: block;
    margin: 100px auto;
    text-align: center;
    padding: 40px 100px;
  }

  .ex-featured-products h2 {
    font-size: 40px;
    text-transform: uppercase;
    margin-bottom: 30px
  }
  .peratest\:asdf{
    background_color: red;
  }


{%- endstyle -%}

<section class="ex-featured-products page-width">
  <h2>Featured Equipment</h2>
  <div class="tab">
    {% for block in section.blocks %}
      {% if block.type == 'tab' %}
        <!-- Tab links -->
        <button class="tablinks hover:tw-bg-sky-700 {%- if forloop.index == 1 -%} {{ ' active' }} {%- endif -%}" onclick="openTabContent(event, 'tab-{{block.id}}')">{{ block.settings.tab_title }}</button>
      {% endif %}
    {% endfor %}
  </div>

  <!-- Tab content start -->
  {% for block in section.blocks %}
    {% if block.type == 'tab' %}

      <div id="tab-{{block.id}}" class="tabcontent {%- if forloop.index == 1 -%} {{ ' active' }} {%- endif -%}">
      <slider-component class="slider-mobile-gutter slider-component-full-width page-width page-width-desktop slider-component-desktop scroll-trigger animate--slide-in">
        <ul
          id="Slider-{{ section.id }}"
          data-id="{{ section.id }}"
          class="grid product-grid contains-card contains-card--product{% if settings.card_style == 'standard' %} contains-card--standard{% endif %} grid--{{ section.settings.columns_desktop }}-col-desktop{% if section.settings.collection == blank %} grid--2-col-tablet-down{% else %} grid--{{ section.settings.columns_mobile }}-col-tablet-down{% endif %}{% if show_mobile_slider or show_desktop_slider %} slider{% if show_desktop_slider %} slider--desktop{% endif %}{% if show_mobile_slider %} slider--tablet grid--peek{% endif %}{% endif %}"
          role="list"
          aria-label="{{ 'general.slider.name' | t }}"
        >
          {% for product in block.settings.product_list %}
            <li class="tw-container">
              <p class="peratest:asdf">
              Lorem ipsum dolor sit, amet consectetur adipisicing elit. 
              Vero id similique laboriosam ipsum ipsa eligendi nam quae fugit doloribus quas. 
              Ratione, odio voluptate rem dicta ullam iure omnis eos quam.
              </p>                
            </li>
          {% endfor %}
        </ul>
        </slider-component>
      </div>
    {% endif %}
  {% endfor %}
<!-- Tab content end -->


</section>

<script>
        function openTabContent(evt, tabId) {
          // Declare all variables
          var i, tabcontent, tablinks;

          // Get all elements with class="tablinks" and remove the class "active"
          tablinks = document.getElementsByClassName("tablinks");
          for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
          }

          // Get all elements with class="tabcontent" and hide them
          tabcontent = document.getElementsByClassName("tabcontent");
          for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].className = tabcontent[i].className.replace(" active", "");
            // tabcontent[i].style.display = "none";
          }

          // Show the current tab, and add an "active" class to the button that opened the tab
          // document.getElementById(tabId).style.display = "block";
          document.getElementById(tabId).className += " active";
          evt.currentTarget.className += " active";
        }
</script>